#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil expand-links:t f:t inline:t num:t p:nil pri:nil prop:nil
#+options: stat:t tags:t tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
#+title: TrAPT
#+date: <2025-04-23 Wed>
#+author: Thomas Freeman
#+language: en
#+creator: Emacs 30.0.92 (Org mode 9.7.25)
 

[[./docs/img/demo.gif]]

* Overview

Use transient menus to interact with the APT package manager.

* Why TrAPT?

TrAPT was designed to fit some niche needs:

1. To make it simpler to call APT commands without typos (for instance, always accidentally typing isntall rather than install)
2. To be able to view ~apt list~ output in a sortable, serachable, and markable list
3. To make it easy to export the output 

* Features

+ Use a tranisent menu to inteact with the following APT commands or directly through and interative function call:
  - install
  - remove
  - purge
  - autoremove
  - list
+ Install and remove programs with APT using Org mode
+ Use ~trapt-exec-find~ in your Emacs configuration to create a report or required executables that your configuration depends on
+ Supports sending commands to eshell or vterm

* Installation

Clone this repo into your Emacs load path and load with the following :

#+begin_src emacs-lisp
  (require 'trapt)
#+end_src

Alternatively, using use-package you can put this package outside of your load path and load it with:

#+begin_src emacs-lisp
  (use-package trapt
    :load-path "/path/to/trapt"
    :init
    (require 'trapt-exec-find) ; Load early if you wish to check your config
    :commands (trapt trapt-exec-find-report)
#+end_src

* Usage

** Using a Tranisent Mentu

Call the transient menu with ~M-x trapt~. This will open the transient menu.

** Call Individual Functions Directly

You can also run the following commands directly. Calling these functions will prompt the user for input.

 | Emacs Function         | APT Command      |
 |------------------------+------------------|
 | trapt-apt-full-upgrade | apt full-upgrade |
 | trapt-apt-install      | apt install      |
 | trapt-apt-list         | apt list         |
 | trapt-apt-purge        | apt purge        |
 | trapt-apt-remove       | apt remove       |
 | trapt-apt-update       | apt update       |

** Manage Packages with APT List Mode

Running trapt-apt-list will direct output to a tablist buffer. From this buffer, packages can be marked usinng the ~m~ key. Once packages can be marked, users can execute APT operations on the selected packages with ~M-x trapt~ or by calling the functions ~M-x trapt-apt-*~.

** Using Org Mode

Headings in Org mode that are simply package names can be marked with customized TODO keywords corresponding to the APT commands. The defaults are below:

 | APT Command  | Default Org TODO Keyword |
 |--------------+--------------------------|
 | full-upgrade | FULL-UPGRADE             |
 | install      | INSTALL                  |
 | purge        | PURGE                    |
 | reinstall    | REINSTALL                |
 | remove       | REMOVE                   |
 | upgrade      | UPGRADE                  |

 An example can be seen in the animation below.

[[./docs/img/trapt-org-demo.gif]]

** ~trapt-exec-find~

In your Emacs configuration, wrap any strings contating shell commands like the example below:

#+begin_src emacs-lisp
  (setq inferior-lisp-program (trapt-exec-find
                               "sbcl --noinform --no-linedit"
                               :pkg-mgr "apt"))
#+end_src

Then, after Emacs has loaded, call a list of all required executables on you system and their path using ~trapt-exec-find-report~. Any executables not found on your system will report "not found".

[[./docs/img/trapt-exec-find-demo.gif]]

From the report buffer, the following commands can be run:

| Key | Command                   | Description                                 |
|-----+---------------------------+---------------------------------------------|
| p   | trapt-exec-find-goto-path | Go to path where executable resides         |
| c   | trapt-exec-find-goto-call | Go to .el file where trapt-exec-find called |
| i   | trapt-apt-install         | Install marked packages                     |
| R   | trapt-apt-remove          | Remove marked packages                      |
| P   | trapt-apt-purge           | Purge marked packages                       |

This package was inspired by the [[https://github.com/abo-abo/whicher][Whicher]] pacakge for Emacs. This is an intent to take that similar idea but to extend it with more features.

* Future Plans

+ [ ] Speed up pulls when ~apt list~ is called with no arguments and pulls the entire list of packages from all repositories.
  - Us asynchronous processing to prevent Emacs from locking up
  - Consider using faster text processing tools such as ~sed~ or use better Lisp data types for faster processing
+ Consider supporting other popular pacakge managers.
